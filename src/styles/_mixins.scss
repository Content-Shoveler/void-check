// Cyberpunk Space Todo - SCSS Mixins
@use "sass:map";

// Cyberpunk glow effect
@mixin cyber-glow($color: "primary", $intensity: "medium") {
  $intensity-values: (
    "low": 0 0 5px,
    "medium": 0 0 10px,
    "high": 0 0 20px
  );
  
  $glow-value: map.get($intensity-values, $intensity);
  $color-value: var(--color-#{$color});
  $color-rgb: var(--color-#{$color}-rgb);
  
  box-shadow: #{$glow-value} #{$color-value},
              0 0 calc(#{$glow-value} * 2) rgba(#{$color-rgb}, 0.5);
}

// Glassmorphism effect
@mixin glass-effect($opacity: 0.7, $blur: 10px) {
  background-color: rgba(var(--color-background-card-rgb), $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: var(--border-thin) solid rgba(var(--color-primary-rgb), 0.1);
}

// Cyberpunk card style
@mixin cyber-card($glowing: false) {
  @include glass-effect(0.7, 10px);
  border-radius: var(--radius-lg);
  padding: var(--space-4);
  border: var(--border-thin) solid rgba(var(--color-primary-rgb), 0.3);
  transition: var(--transition-base);
  
  @if $glowing {
    &:hover {
      border-color: var(--color-primary);
      @include cyber-glow("primary", "low");
    }
  }
}

// Cyberpunk button style
@mixin cyber-button($variant: "primary") {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-2) var(--space-4);
  font-family: var(--font-primary);
  font-weight: var(--font-medium);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  border-radius: var(--radius-md);
  transition: var(--transition-base);
  cursor: pointer;
  position: relative;
  overflow: hidden;
  
  @if $variant == "primary" {
    background: var(--effect-gradient-cosmic);
    color: var(--color-text-primary);
    border: var(--border-thin) solid var(--color-primary);
    
    &:hover {
      @include cyber-glow("primary", "medium");
    }
  } @else if $variant == "secondary" {
    background: transparent;
    color: var(--color-secondary);
    border: var(--border-thin) solid var(--color-secondary);
    
    &:hover {
      @include cyber-glow("secondary", "medium");
    }
  } @else if $variant == "accent" {
    background: transparent;
    color: var(--color-accent);
    border: var(--border-thin) solid var(--color-accent);
    
    &:hover {
      @include cyber-glow("accent", "medium");
    }
  } @else if $variant == "ghost" {
    background: transparent;
    color: var(--color-text-primary);
    border: none;
    
    &:hover {
      background: rgba(var(--color-primary-rgb), 0.1);
    }
  }
  
  &:active {
    transform: scale(0.95);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
}

// Cyberpunk input style
@mixin cyber-input {
  background: var(--color-background-inset);
  border: var(--border-thin) solid rgba(var(--color-primary-rgb), 0.3);
  border-radius: var(--radius-md);
  padding: var(--space-2) var(--space-3);
  color: var(--color-text-primary);
  font-family: var(--font-secondary);
  transition: var(--transition-base);
  width: 100%;
  
  &:focus {
    outline: none;
    border-color: var(--color-primary);
    @include cyber-glow("primary", "low");
  }
  
  &.error {
    border-color: var(--color-status-error);
    @include cyber-glow("status-error", "low");
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

// Cyberpunk text truncation
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Cyberpunk multi-line truncation
@mixin text-truncate-multiline($lines: 2) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
}

// Responsive breakpoints
@mixin responsive($breakpoint) {
  @if $breakpoint == "mobile" {
    @media (max-width: 639px) { @content; }
  } @else if $breakpoint == "tablet" {
    @media (min-width: 640px) and (max-width: 1023px) { @content; }
  } @else if $breakpoint == "desktop" {
    @media (min-width: 1024px) { @content; }
  } @else if $breakpoint == "tablet-up" {
    @media (min-width: 640px) { @content; }
  } @else if $breakpoint == "tablet-down" {
    @media (max-width: 1023px) { @content; }
  }
}

// Flex utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Animation - Cyberpunk glitch effect
@mixin glitch-effect {
  position: relative;
  
  &:before, &:after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    clip: rect(0, 0, 0, 0);
  }
  
  &:before {
    left: -2px;
    text-shadow: 2px 0 var(--color-secondary);
    animation: glitch-animation-1 2s infinite linear alternate-reverse;
  }
  
  &:after {
    left: 2px;
    text-shadow: -2px 0 var(--color-primary);
    animation: glitch-animation-2 3s infinite linear alternate-reverse;
  }
  
  @keyframes glitch-animation-1 {
    0% {
      clip: rect(20px, 9999px, 15px, 0);
    }
    20% {
      clip: rect(12px, 9999px, 78px, 0);
    }
    40% {
      clip: rect(89px, 9999px, 5px, 0);
    }
    60% {
      clip: rect(32px, 9999px, 54px, 0);
    }
    80% {
      clip: rect(45px, 9999px, 8px, 0);
    }
    100% {
      clip: rect(67px, 9999px, 23px, 0);
    }
  }
  
  @keyframes glitch-animation-2 {
    0% {
      clip: rect(34px, 9999px, 45px, 0);
    }
    20% {
      clip: rect(56px, 9999px, 12px, 0);
    }
    40% {
      clip: rect(7px, 9999px, 60px, 0);
    }
    60% {
      clip: rect(23px, 9999px, 32px, 0);
    }
    80% {
      clip: rect(78px, 9999px, 19px, 0);
    }
    100% {
      clip: rect(3px, 9999px, 90px, 0);
    }
  }
}

// Scrollbar styling
@mixin custom-scrollbar($width: 8px, $track-color: "background-elevated", $thumb-color: "primary") {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: var(--color-#{$track-color});
    border-radius: var(--radius-full);
  }
  
  &::-webkit-scrollbar-thumb {
    background: var(--color-#{$thumb-color});
    border-radius: var(--radius-full);
    
    &:hover {
      background: rgba(var(--color-#{$thumb-color}-rgb), 0.8);
    }
  }
}

// Focus visible style
@mixin focus-visible {
  &:focus-visible {
    outline: var(--border-regular) solid var(--color-primary);
    outline-offset: 2px;
    @include cyber-glow("primary", "low");
  }
}
